- name: prepare some dirs
  file: name={{ item }} state=directory
  with_items:
  - "{{ ca_dir }}"
  - "{{ ca_dir }}/backup"
  - "{{ ca_dir }}/yml"
  - "~/.kube"


# 注册变量p，根据p的stat信息判断是否已经生成过ca证书，如果没有，下一步生成证书
# 如果已经有ca证书，为了保证整个安装的幂等性，跳过证书生成的步骤
- name: 读取ca证书stat信息
  stat: path="{{ ca_dir }}/ca.pem"
  register: p

- name: 准备CA配置文件和签名请求
  template: src={{ item }}.j2 dest={{ ca_dir }}/{{ item }}
  with_items:
  - "ca-config.json"
  - "ca-csr.json"
  when: p.stat.isreg is not defined

- name: 生成 CA 证书和私钥
  when: p.stat.isreg is not defined
  shell: "cd {{ ca_dir }} && \
	 {{ bin_dir }}/cfssl gencert -initca ca-csr.json | {{ bin_dir }}/cfssljson -bare ca" 

#----------- 创建配置文件: /root/.kube/config
- import_tasks: create-kubectl-kubeconfig.yml
  tags: create_kctl_cfg

#------------创建配置文件: kube-proxy.kubeconfig
- import_tasks: create-kube-proxy-kubeconfig.yml

#------------创建配置文件: kube-controller-manager.kubeconfig
- import_tasks: create-kube-controller-manager-kubeconfig.yml

#------------创建配置文件: kube-scheduler.kubeconfig
- import_tasks: create-kube-scheduler-kubeconfig.yml




